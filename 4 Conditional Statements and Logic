CONDITIONAL STATEMENTS and LOGIC

GOAL: Understand what a conditional operator is, what it's used for, and how to use it inside of your code. You should also know
what a conditional statement is, how it's used, and how to write it. You should also understand what a logical operator is, how 
it's used, and how to write it.

CONDITIONAL STATEMENTS

A conditional operator is used to compare two pieces of data. It tests if something is true or false. The following is a list of
these operators:

==    equal to
===   equal value and equal type
!=    not equal to
!==   not equal value or not equal type
>     greater than
<     less than
>=    greater than or equal to
<=    less than or equal to

EXAMPLES:
1 == 1     true
1 == '1'   true
1 == 4     false
1 === 1    true
1 === '1'  false
1 != 2     true
1 != 1     false
1 > 0      true
1 > 3      false
1 < 3      true
1 < 0      false
1 >= 0     true
1 >= 1     true
1 >= 3     false
1 <= 3     true
1 <= 1     true
1 <= 0     false

A conditional statement "[performs] different actions for different decisions".

"Use the if statement to specify a block of JavaScript code to be executed if a condition is true...Use the else statement to 
specify a block of code to be executed if the condition is false...Use the else if statement to specify a new condition if the 
first condition is false."

if (number < 6) {
  text = "This number is less than six.";
}
else if (number > 6) {
  text = "This number is greater than six";
}
else {
  text = "This number is equal to six.";
}

LOGIC

Logical operators enable us to use more than one condition in a conditional statement. The following are logical operators:

&&    and
||    or
!     not

EXAMPLES:
if (citizen === true && age >= 18) {
	var canVote = true;
}

if (!animal === 'Cat') {
	allowedByApartment = false;
}

PRACTICE PROBLEM #1:
Create a function that compares two parameters and determines if they are the same. If they are, display "They are the same."

Create another function that compares the same two arguments from above and determines whether the first one is greater than the
second one. If the first one is greater than the second one, display "The first one is greater."

Create a third function that compares these same two arguments and determines whether the first one is less than the second one.
If it is, display "The first one is smaller".

Last of all, create a function that accepts these same arguments and determines if they are not the same (using !=). If they are
not the same, display "They are not the same."

PRACTICE PROBLEM #3:
Let's say someone has an insurance company that won't raise their rates until their third accident. Create a function that 
accepts a parameter of how many accidents they've been in. If their number of accidents is 2 or less, return false. If their 
number of accidents is 3+, return true. Call the function, pass in any number for the argument, and if it returns true display 
"Your rates have gone up", otherwise, display "Your rates are still the same."

REFERENCES:
https://www.w3schools.com/js/js_comparisons.asp
